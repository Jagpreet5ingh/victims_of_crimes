Chat History URL: https://chat.openai.com/share/a0444d58-f615-4245-8759-efd80bb2e761



library("tidyverse")
crime_data <- read_csv("output/data/edited_data.csv",show_col_types = FALSE) 
column_specifications <- spec(crime_data)

total_counts <- aggregate(COUNT_ ~ REPORT_YEAR, data = crime_data, sum)  
# Create a bar graph using ggplot2 
ggplot(total_counts, aes(x = as.factor(REPORT_YEAR), y = COUNT_)) +   
  geom_bar(stat = "identity", fill = "blue", alpha = 0.7) + 
  labs(title = "Total Counts of Crimes Against the Person in an Year (2014-2022)",      
       x = "Year",        
       y = "Total Number of Crimes") +  
  scale_y_continuous(breaks = seq(0, max(total_counts$COUNT_), by = 2000)) + # Set y-axis breaks
  theme_minimal()--------------------add another variable subtype on the bars, that shows amount of robbery, assualt , sexual assault or other type of crimes happened each year. this can be obtained by summing the count column for each subtype for each year
ChatGPT
To add another variable (subtype) on the bars, you can use the fill aesthetic inside the aes function and provide the subtype variable. Assuming your dataset has a column named SUBTYPE that represents the subtype of each crime, you can modify your ggplot code as follows:

R
Copy code
library("tidyverse")

# Assuming the column SUBTYPE exists in your dataset
crime_data <- read_csv("output/data/edited_data.csv", show_col_types = FALSE) 
column_specifications <- spec(crime_data)

# Aggregate total counts by REPORT_YEAR and SUBTYPE
subtype_counts <- aggregate(COUNT_ ~ REPORT_YEAR + SUBTYPE, data = crime_data, sum)

# Create a bar graph using ggplot2 with subtype on the bars
ggplot(subtype_counts, aes(x = as.factor(REPORT_YEAR), y = COUNT_, fill = SUBTYPE)) +
  geom_bar(stat = "identity", position = "dodge", alpha = 0.7) +
  labs(title = "Total Counts of Crimes by Subtype (2014-2022)",
       x = "Year",
       y = "Total Number of Crimes") +
  scale_y_continuous(breaks = seq(0, max(subtype_counts$COUNT_), by = 2000)) +
  theme_minimal()
This code assumes that you have a column named SUBTYPE in your dataset that represents the subtype of each crime. Adjust the column name accordingly if it is different in your dataset. The position = "dodge" argument in geom_bar ensures that the bars for different subtypes are placed side by side for each year.

put all 4 subtypes in one graph
ChatGPT
If you want to combine all four subtypes on one graph for each year, you can create a new column for a combined subtype variable and then use that variable in the fill aesthetic. Here's how you can modify your code:

R
Copy code
library("tidyverse")

# Assuming the column SUBTYPE exists in your dataset
crime_data <- read_csv("output/data/edited_data.csv", show_col_types = FALSE) 
column_specifications <- spec(crime_data)

# Aggregate total counts by REPORT_YEAR and SUBTYPE
subtype_counts <- aggregate(COUNT_ ~ REPORT_YEAR + SUBTYPE, data = crime_data, sum)

# Create a new variable that combines all subtypes
subtype_counts <- mutate(subtype_counts, Combined_Subtype = ifelse(SUBTYPE %in% c("Robbery", "Assault", "Sexual Assault"), SUBTYPE, "Other"))

# Aggregate counts by REPORT_YEAR and Combined_Subtype
total_subtype_counts <- aggregate(COUNT_ ~ REPORT_YEAR + Combined_Subtype, data = subtype_counts, sum)

# Create a bar graph using ggplot2 with combined subtypes on the bars
ggplot(total_subtype_counts, aes(x = as.factor(REPORT_YEAR), y = COUNT_, fill = Combined_Subtype)) +
  geom_bar(stat = "identity", position = "dodge", alpha = 0.7) +
  labs(title = "Total Counts of Crimes by Subtype (2014-2022)",
       x = "Year",
       y = "Total Number of Crimes") +
  scale_y_continuous(breaks = seq(0, max(total_subtype_counts$COUNT_), by = 2000)) +
  theme_minimal()
This code creates a new variable called Combined_Subtype, which combines "Robbery," "Assault," and "Sexual Assault" into one category and assigns "Other" to the rest. The graph will then display bars for each year with different colors representing the combined subtypes. Adjust the subtype names accordingly based on your actual data.